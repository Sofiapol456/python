# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z-BTcEr6Jsb3yx87cBQgpiZlFYLD1N0L
"""

import time

def es_numero(texto=""):

    """
    Función que devuelve si un texto representa un número o no.
    https://www.w3schools.com/python/ref_string_isnumeric.asp
    -1 para no es número, y 1 para sí es número.
    @param: texto   Representa o no un número, incluso valida el vacío.
    @return: Real   1 o -1.
    """

    salida = 1

    if texto.isnumeric() == False:
        salida = -1

    return salida


def imprimir_color_amarillo(mensaje):
    """
    https://python-para-impacientes.blogspot.com/2016/09/dar-color-las-salidas-en-la-consola.html
    Función que imprime un mensaje del usuario en color amarillo.
    Cuándo se trata de funciones para manipular el aspecto, es posible permitirles las impresiones internas.
    @param: string      Mensaje del usuario.
    """
    print("\x1b[1;33m" + mensaje)

def guardar_saludo():
    """
    Función para guardar datos en un archivo de texto.
    Se podrìa mejorar cambiando como un parámetro el nombre del archivo
    y el saludo o contenido.
    """
    f = open ('saludo.txt','w')
    f.write('Hola ADSO. \n')
    f.write('¿Cómo están?.')
    f.close()


def guardar_archivo_html():
    """
    Función para guardar datos en un archivo de html.
    https://programminghistorian.org/es/lecciones/trabajar-con-archivos-de-texto
    """
    f = open ('sistema.html','w')
    f.write('<div style=\"border: solid 1px;\">hola mundo</div>')
    f.close()

def guardar_archivo_html_v2(saludo):
    """
    Función en versión 2 para guardar datos en un archivo de html.
    @param: string      Texto del usuario para guardar.
    """

    texto_css = " border: solid 1px; ";
    texto_css += " color: red; ";
    texto_css += " background-color: yellow; ";

    f = open ('sistema.html','w')
    f.write(' <div style=\" ' + texto_css + ' \"> ' + saludo + ' </div> ')
    f.close()

def leer_archivo():
    """
    Lee un archivo de texto y lo muesra por pantalla.
    """
    f = open ('sistema.html','r')
    mensaje = f.read()
    print(mensaje)
    f.close()

def presentacion():
    """
    Muestra un mensaje, detiene por tres segundos la ejecución, y luego continúa.
    https://realpython.com/python-sleep/
    """
    print("Hola a todos, demostrativo básico de funciones Python.")
    time.sleep(3)

#--------------------- Ejecución y lamado de funciones ---------------
print("Inicio de programa.")
print( "Es número:", es_numero( "hola hola" ) )
print( "Es número:", es_numero( "35" ) )
imprimir_color_amarillo("Hola")
guardar_saludo()
guardar_archivo_html_v2( input( "Digita un texto." ) )
leer_archivo()
presentacion()

print(chr(27)+"[1;33m"+"Ingrese los siguientes datos")

def menu():
  opc = -1 # Inicializar opc con un valor diferente de 0
  while opc != 0:
    opc = int(input("0.salir 1 convertir"))

    if opc == 1:
      convertir()

    if opc == 2:
      print ("el radio es", circulo(int(input("digita el radio"))))

def convertir():
    d = int(input("1 pesos a dolares, 2 dolares a pesos: "))
    t = float(input("digita la taza de cambio: "))

    if d == 1:
        plata = int(input("digita los pesos: "))
        print(plata / t)
    else:
        plata = int(input("digita los dolares: "))
        print(plata * t)

convertir()

import math

def circulo(radio):
    area = math.pi * radio**2
    return area

radio = float(input("Ingrese el radio del círculo: "))
area_circulo = circulo(radio)
print("El área del círculo es:", are3 a_circulo)

menu()

print("\033[4;35m"+"Gracias por ingresar los datos")

# Esta función muestra un menú con opciones para el usuario
def menu():

    print("Menú de opciones:")
    print("1. Escribir")
    print("2. Leer")
    print("3. Salir")

def imprimir_color_amarillo(mensaje):

    print("\x1b[1;33m" + mensaje)

# Esta función escribe un archivo de texto con el nombre y el contenido dados por el usuario
def escribir():

    nombre = input("Digita el nombre del texto: ")

    try:
        f = open ('saludo.txt','w')
        f.write('Hola dd. \n')
        f.write('¿Cómo están?.')
        f.close()
        print("El archivo se ha escrito correctamente.")
    except:
        print("Ha ocurrido un error al escribir el archivo.")

def guardar_archivo_html():

    f = open ('sistema.html','w')
    f.write('<div style=\"border: solid 1px;\">hola mundo</div>')
    f.close()

def guardar_archivo_html_v2(saludo):

    texto_css = " border: solid 1px; ";
    texto_css += " color: red; ";
    texto_css += " background-color: yellow; ";

    f = open ('sistema.html','w')
    f.write(' <div style=\" ' + texto_css + ' \"> ' + saludo + ' </div> ')
    f.close()

# Esta función lee un archivo de texto con el nombre dado por el usuario
def leer():
    nombre = input("Ingrese el nombre del texto: ")
    try:
          f = open ('sistema.html','r')
          mensaje = f.read()
          print(mensaje)
          f.close()
    except:
        print("Ha ocurrido un error al leer el archivo.")

# Esta función ejecuta el programa principal
def main():
    opcion = 0 # Inicializa la opción con un valor diferente de 3
    while opcion != 3: # Mientras la opción no sea 3
        menu() # Muestra el menú
        opcion = int(input("Ingrese su opción: ")) # Pide al usuario que ingrese una opción
        if opcion == 1: # Si la opción es 1
            escribir() # Llama a la función escribir
        elif opcion == 2: # Si la opción es 2
            leer() # Llama a la función leer
        elif opcion == 3: # Si la opción es 3
            print("Gracias por usar el programa.") # Imprime un mensaje de despedida
        else: # Si la opción es inválida
            print("Opción no válida. Intente de nuevo.") # Imprime un mensaje de error

imprimir_color_amarillo("Bienvenidos, Ingresa los siguientes datos")
main() # Llama a la función principal

#Documentación de funciones
#https://stackoverflow.com/questions/9195455/how-to-document-a-method-with-parameters

#Buen resumen Python
#https://www.freecodecamp.org/espanol/news/operadores-basicos-en-python-con-ejemplos/

def distancia( x1, x2, y1, y2 ):
    """
    Función que calcula la distancia en el plano cartesiano.
    https://www.uaeh.edu.mx/docencia/P_Presentaciones/prepa3/2019/Coordenadas.pdf
    @param: real Coordenada 1 en eje x
    @param: real Coordenara 2 en eje x
    @param: real Coordenada 1 en eje y
    @param: real Coordenara 2 en eje y
    @return:real la distancia entre dos puntos del plano.
    """
    salida = 0
    salida = ((x2-x1)**2+(y2-y1)**2)**0.5
    return round(salida, 2) #Redondeamos con dos decimales.

#--------- Probando las funciones -------------------

#Si las coordenadas son iguales, hay una diagonal.
#Estas coordenadas representan un cuadro de distancia.
#print(distancia(0,1,0,1))

#Estas coordenadas representan una diagonal con mucha distancia distancia.
#print(distancia(0,8,0,8))

#Estas coordenadas representan una columna con mucha distancia distancia.
print(distancia(5,5,1,8))

#https://apuntes.de/python/alcance-de-variables-en-python-global-y-local/#gsc.tab=0

g_conteo = 0
g_nombre = "progamador"


def subir():

    global g_conteo
    global g_nombre
    g_conteo += 1
    g_nombre = "Programador"
    return 0

def bajar():

    global g_conteo
    global g_nombre
    g_nombre = "Analista"
    g_conteo += 1
    return 0

subir()
bajar()

print( g_conteo, " ", g_nombre )